@model EsselTestLocalApplication.Models.Accounts.UnSecuredLoan
@if (Model.Status != "0")
{<div class="col-md-12 verifydiv">
        <br />
        <div id="ApprovalView" class="row">
            <form onsubmit="return false">
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LoanNo)
                            @Html.TextBoxFor(model => model.LoanNo, new { @id = "txtApprUnsLoanNo", @class = "form-control", @type = "text", readOnly = "readOnly" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ReturnLoanDate)
                            @Html.TextBoxFor(model => model.ReturnLoanDate, new { @id = "txtapprUnsLoanDate", @class = "form-control", @type = "text", readOnly = "readOnly" })

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name)
                            @Html.TextBoxFor(model => model.Name, new { @id = "txtapprUnsLoanDate", @class = "form-control", @type = "text", readOnly = "readOnly" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LoanAmount)
                            @Html.TextBoxFor(model => model.LoanAmount, new { @id = "txtApprUnsLoanAmount", @class = "form-control", @type = "text", readOnly = "readOnly" })
                        </div>
                    </div>
                    <div class="col-md-3" id="divapprinterest">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RateOfIntrest)
                            @Html.TextBoxFor(model => model.RateOfIntrest, new { @id = "txtapprUnsLoanInt", @class = "form-control", @type = "text", readOnly = "readOnly" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">

                    @if (Model.DeductionDCA != null)
                    {

                        <table id="apprloanDeductionTable" class="table order-list" style="width:100%;border:1px solid gray">
                            <thead>
                                <tr>
                                    <td style="text-align:center"><label>Account Head Code</label></td>
                                    <td style="text-align:center"><label>SubAccount Head Code</label></td>
                                    <td style="text-align:center"><label>Deduction Amount</label></td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr style="text-align:center">
                                    <td>@Model.DeductionDCA</td>
                                    <td>@Model.DeductionSDCA</td>
                                    <td> @Model.DeductionAmount</td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                    }
                </div>
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Bank Name:</label>
                            <input type="text" class="form-control" value="@Model.Bank" readOnly="readOnly" id="ApprBankname" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Transaction Number:</label>
                            <input type="text" class="form-control" value="@Model.UnsLoanPaymentNo" readOnly="readOnly" />
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Transaction Date:</label>
                            <input type="text" class="form-control" value="@Model.ReturnPayDate" readOnly="readOnly" id="apprnewloanpaydate" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Transaction Amount:</label>
                            <input type="text" class="form-control" value="@Model.paymentAmount" readOnly="readOnly" id="txtpaymentamount" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Model Of Pay:</label>
                            <input type="text" class="form-control" value="@Model.ModeofPay" readOnly="readOnly" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks)
                            @Html.TextAreaFor(model => model.Remarks, new { @id = "txtUnsLoanReamarks", @class = "form-control", @type = "text", @rows = "3", readOnly = "readOnly" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="form-group">
                            <input type="hidden" value="@Model.MOID" id="txtMOID" />
                            <label>Status</label>
                            @Html.DropDownListFor(model => model.MOID, new SelectList("Type", "Type"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ApprStatus" })
                            @*<select class="form-control dropdown-toggle" id="ApprStatus">
                                    <option selected="selected" value="Select">Select</option>
                                    <option value="Verify">Verify</option>
                                    <option value="Approve">Approve</option>
                                    <option value="Return">Return</option>
                                    <option value="Reject">Reject</option>
                                </select>*@
                        </div>
                    </div>
                    <div class="col-md-6 ">
                        <div class="form-group">
                            <label>Notes:</label><br />
                            <textarea rows="3" cols="60" class="form-control" id="ApprNote"></textarea>
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="form-group">
                            <br /><br /><button onClick="ApproveNewUnsLoan('@Model.BankTransactionRefNo','@Model.LoanType')">Submit</button>

                        </div>
                    </div>
                    <div class="col-md-1">
                    </div>
                </div>
                <div class="col-md-12">
                    <br />
                    <div class="text-center">
                        <div id="divApprLoanInfoMsg" class="alert alert-danger hidden"></div>
                    </div>
                </div>
            </form>
        </div>
    </div>
}
else
{
    <div class="col-md-12 verifydiv">
        <br />
        <div id="UpdateView" class="col-md-10">
            <form onsubmit="return false">
                <div class="col-md-12">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LoanType)
                            @Html.TextBoxFor(model => model.LoanType, new { @id = "txtUpLoantype", @class = "form-control", @type = "text", @readOnly = "readyOnly" })

                        </div>
                    </div>
                    <div class="col-md-4" id="divLoanNo">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LoanNo)
                            @Html.TextBoxFor(model => model.LoanNo, new { @id = "txtUnsLoanNo", @class = "form-control", @type = "text", @readOnly = "readyOnly" })

                        </div>
                    </div>
                    <div class="col-md-4" id="divLoanDate">
                        <div class="form-group">
                            @if (Model.LoanType != "New")
                            {

                                @Html.LabelFor(model => model.ReturnLoanDate, new { @id = "lblLoanDate" })
                                @Html.TextBoxFor(model => model.ReturnLoanDate, new { @class = "form-control  date-picker", @id = "txtUpAdditionalDate", @readOnly = "true", @type = "text" })

                            }
                            else
                            {
                                @Html.LabelFor(model => model.ReturnLoanDate)
                                @Html.TextBoxFor(model => model.ReturnLoanDate, new { @class = "form-control date-picker", @id = "txtUpUnsLoanDate", @readOnly = "readyOnly", @type = "text" })
                            }
                        </div>
                    </div>
                    <div class="col-md-4" id="divUnsName">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name)
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "txtUpUnsLoanPersonName", @type = "text" })
                        </div>
                    </div>
                    <div class="col-md-4" id="divAmount">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LoanAmount)
                            @Html.TextBoxFor(model => model.LoanAmount, new { @class = "form-control", @id = "txtUpUnsLoanAmount", @type = "text", onkeypress = "return ValidateUpdateAmount(this,event);", onKeyup = "CountUpdateCountLoanFinalAmount()" })

                        </div>
                    </div>
                    <div class="col-md-4" id="divUnsRateOfInterest">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RateOfIntrest)
                            @Html.TextBoxFor(model => model.RateOfIntrest, new { @id = "txUptUnsLoanIntrest", @class = "form-control", @type = "text", onkeypress = "return ValidateUpdateAmount(this,event);" })

                        </div>
                    </div>
                </div>
                <div id="divUnsDeduction">
                    <div class="col-md-12" style="margin-top:15px">
                        <hr />
                    </div>
                    <div class="row">
                        <div class="col-md-3"></div>
                        <div class="col-md-2 text-right" style="margin-top:5px"><label>Deductions</label></div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4 text-center">
                                    <div class="form-group">
                                        <input id="chkDedUnIntY" name="UnDeduction" value="Yes" type="radio" style="font-weight:bold;">Yes
                                        <input id="chkDedUnIntN" name="UnDeduction" value="No" type="radio" checked>No
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                    <div id="divUnsDeduction" class="col-md-12  change-tab">
                        <div class="strike">
                            <span>Add Deduction</span>
                        </div>
                        <div class="tabledynamic">
                            <br />
                            <table id="UnloanDeductionTable" class="table order-list" style="width:100%">
                                <thead>
                                    <tr>
                                        <td style="text-align:center"><label>Account Head Code</label></td>
                                        <td style="text-align:center"><label>SubAccount Head Code</label></td>
                                        <td style="text-align:center"><label>Deduction Amount</label></td>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr style="text-align:center">
                                        <td>
                                            <select class="form-control dropdown-toggle loandca" id="ddldcacode"><option selected="selected" value="Select">-Select-</option></select>
                                        </td>
                                        <td>
                                            <select class="form-control dropdown-toggle loansdca" id="ddlsdcacode"><option selected="selected" value="Select">-Select-</option></select>

                                        </td>
                                        <td>
                                            <input type="text" id="txtUnsLoanDedAmount" class="form-control DedAmount" onkeypress="return ValidateAmount(this,event);" onKeyup="CountUpdateCountLoanFinalAmount()" />

                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                    <div class="row change-tab" id="divUnsPayment">
                        <div class="row">
                            <div class="col-md-12">
                                <h5 style="text-align:left;font-weight:bold;margin-bottom:0%">Payment Details</h5>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12"><hr class="separationHr" /></div>
                        </div>

                        <div class="col-md-12">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BankID)
                                    @Html.DropDownListFor(model => model.BankID, new SelectList(Model.BankNamesList, "Bank_Id", "Bank_Name"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddl_UpUnsLoanBank", onChange = "UnsLoanUpPayModeChange();" })

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ModeofPay)

                                    @if (Model.LoanType != "Return")
                                    {
                                        @Html.DropDownListFor(model => model.ModeofPay, new SelectList(Model.UnsLoanPayModesList, "Mode", "ModeDesc"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddl_UpUnsLoanPayMode" })


                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(model => model.ModeofPay, new SelectList(Model.UnsLoanPayModesList, "Mode", "ModeDesc"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddl_UpUnsLoanPayMode", onChange = "UnsLoanUpPayModeChange();" })
                                    }
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UnsLoanPaymentNo)
                                    @Html.TextBoxFor(model => model.UnsLoanPaymentNo, htmlAttributes: new { @class = "form-control", @id = "txtUpUnsLoanPaymentNo" })
                                    <select class="form-control dropdown-toggle WdNo" id="ddl_UpUnsLoanPaymentNo">
                                        <option selected="selected" value="Select">-Select-</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReturnPayDate)
                                    @Html.TextBoxFor(model => model.ReturnPayDate, new { @id = "txtUpUnsLoanPayDate", @class = "form-control date-picker", @type = "text" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remarks)
                                    @Html.TextAreaFor(model => model.Remarks, new { @id = "txtUpUnsLoanReamarks", @class = "form-control", @type = "text", @rows = "3" })

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.paymentAmount)
                                    @Html.TextBoxFor(model => model.paymentAmount, new { @id = "txtUpUnsLoanFinalAmount", @class = "form-control", @type = "text", @readOnly = "true" })

                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="text-right">
                                <input type="hidden" id="txtMainLoanDate" />
                                <input type="hidden" id="txtIntrestExist" />
                                <input type="hidden" id="AdditionalTotal" />
                                <input type="hidden" id="TotalLoanAmount" />
                                <input type="hidden" value="0" id="txtupdateunsecuredloanRoleId" style="display:none" />
                                <button class="btn btn1 btn-success" id="UpdateUnsLoan" onclick="UpdateUnsLoanData('@Model.BankTransactionRefNo','@Model.LoanType','@Model.LoanNo')">Submit</button>

                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="text-center">
                            <br />
                            <div id="divUnsLoanInfoMsg" class="alert alert-danger hidden">
                            </div>
                        </div>
                    </div>
            </form>

        </div>
        </div>
        }
        <input id="apprBankid" value="@Model.BankID" type="hidden" />
        <input id="apprType" value="@Model.LoanType" type="hidden" />

        <script>
    $(document).ready(function () {

        var status = '@Model.Status';
        var Roleid = '@Session["Roleid"]';
        $("#txtupdateunsecuredloanRoleId").val(Roleid);
        if (status!=='0') {
            var Mid = $("#txtMOID").val();
            $.ajax({
                type: "POST",
                url: "/AccountsApproval/GetApprovalstatus",
                data: '{Mid:"' + Mid + '",Rid:"' + Roleid + '"}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var count = Object.keys(response).length;
                    if (count > 0) {
                        var ddlaprovalstatus = $("#ApprStatus");
                        ddlaprovalstatus.empty().append('<option selected="selected" value="Select">Select</option>');
                        $.each(response, function () {
                            ddlaprovalstatus.append($("<option></option>").val(this['Type']).html(this['Type']));
                        });
                    }
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }

            var type = '@Model.LoanType';
            var loanid='@Model.UnsecuredLoadId';
            var refno = $("#currentUnlTransno").val();
            if (status != '0') {
                $("#ApprovalView").removeClass("hidden");
                $("#UpdateView").addClass("hidden");

                //transdate = $("#apprnewloanpaydate").val();
                //var idate = transdate.toString().split(' ');
                //var idate2 = idate.toString().split(' ');
                //var idate3 = "'" + idate2 + "'";
                //var idate4 = moment(idate3, "DD-MM-YYYY").format('DD-MMM-YYYY');
                //$("#apprnewloanpaydate").val(idate4);
                //loandate = $("#txtapprUnsLoanDate").val();
                //var ldate = loandate.toString().split(' ');
                //var ldate2 = ldate.toString().split(' ');
                //var ldate3 = "'" + ldate2 + "'";
                //var ldate4 = moment(ldate3, "DD-MM-YYYY").format('DD-MMM-YYYY');
                //$("#txtapprUnsLoanDate").val(ldate4);
                if (type == "Return") {
                    $("#divapprinterest").addClass("hidden");
                    var loanamount = '@Model.LoanAmount';
                    var deductionamount = '@Model.DeductionAmount'
                    $("#").val(parseFloat(loanamount).toFixed(2) - parseFloat(deductionamount).toFixed(2));
                }
                else { $("#divapprinterest").removeClass("hidden"); }


            }
            else if (status == '0') {
                if (type == "New") {
                    $("#txtUpUnsLoanDate").datepicker({
                        dateFormat: 'dd-M-yy',
                        changeMonth: true,
                        changeYear: true,
                        showOn: "button",
                        buttonText: "<i class ='glyphicon glyphicon-calendar'></i>",
                        onClose: function (selectedDate) {
                            $("#txtUpUnsLoanPayDate").datepicker("option", "minDate", selectedDate);

                        }
                    });
                    $("#txtUpUnsLoanPayDate").datepicker({
                        dateFormat: 'dd-M-yy',
                        changeMonth: true,
                        changeYear: true,
                        showOn: "button",
                        minDate: '@Model.ReturnLoanDate',
                        buttonText: "<i class ='glyphicon glyphicon-calendar'></i>"
                    });
                    $("#txtUpAdditionalDate").datepicker({
                        dateFormat: 'dd-M-yy',
                        changeMonth: true,
                        changeYear: true,
                        showOn: "button",
                        buttonText: "<i class ='glyphicon glyphicon-calendar'></i>",
                        onClose: function (selectedDate) {
                            CheckReturnUpdateLoanDate();
                        }
                    });
                    //transdate = $("#txtUpUnsLoanPayDate").val();
                    //var idate = transdate.toString().split(' ');
                    //var idate2 = idate.toString().split(' ');
                    //var idate3 = "'" + idate2 + "'";
                    //var idate4 = moment(idate3, "DD-MM-YYYY").format('DD-MMM-YYYY');
                    //$("#txtUpUnsLoanPayDate").val(idate4);
                    //loandate = $("#txtUpUnsLoanDate").val();
                    //var ldate = loandate.toString().split(' ');
                    //var ldate2 = ldate.toString().split(' ');
                    //var ldate3 = "'" + ldate2 + "'";
                    //var ldate4 = moment(ldate3, "DD-MM-YYYY").format('DD-MMM-YYYY');
                    //$("#txtUpUnsLoanDate").val(ldate4);
                    $("#ApprovalView").addClass("hidden");
                    $("#UpdateView").removeClass("hidden");
                    $("#divUnsDeduction").addClass("hidden");
                    $("#txtUpUnsLoanPaymentNo").removeClass('hidden');
                    $("#ddl_UpUnsLoanPaymentNo").addClass('hidden');
                    $("#divUnsRateOfInterest").removeClass("hidden");
                }
                else if (type == "Existing") {

                    $("#txtUpUnsLoanDate").datepicker({
                        dateFormat: 'dd-M-yy',
                        changeMonth: true,
                        changeYear: true,
                        showOn: "button",
                        buttonText: "<i class ='glyphicon glyphicon-calendar'></i>",
                        onClose: function (selectedDate) {
                            $("#txtUpUnsLoanPayDate").datepicker("option", "minDate", selectedDate);

                        }
                    });
                    $("#divUnsDeduction").addClass("hidden");
                    $("#ApprovalView").addClass("hidden");
                    $("#UpdateView").removeClass("hidden");
                    $("#divUnsDeduction").addClass("hidden");

                    //transdate = $("#txtUpUnsLoanPayDate").val();
                    //var idate = transdate.toString().split(' ');
                    //var idate2 = idate.toString().split(' ');
                    //var idate3 = "'" + idate2 + "'";
                    //var idate4 = moment(idate3, "DD-MM-YYYY").format('DD-MMM-YYYY');
                    ////$("#txtUpUnsLoanPayDate").val(idate4);
                    ////loan date
                    //loandate = $("#txtUpAdditionalDate").val();
                    //var ldate = loandate.toString().split(' ');
                    //var ldate2 = ldate.toString().split(' ');
                    //var ldate3 = "'" + ldate2 + "'";
                    //var ldate4 = moment(ldate3, "DD-MM-YYYY").format('DD-MMM-YYYY');

                    $("#txtUpUnsLoanPayDate").datepicker({
                        dateFormat: 'dd-M-yy',
                        changeMonth: true,
                        changeYear: true,
                        showOn: "button",
                        minDate: '@Model.ReturnLoanDate',
                        buttonText: "<i class ='glyphicon glyphicon-calendar'></i>"
                    }).datepicker("setDate",  '@Model.ReturnPayDate');

                    $("#txtUpAdditionalDate").datepicker({
                        dateFormat: 'dd-M-yy',
                        changeMonth: true,
                        changeYear: true,
                        showOn: "button",
                        buttonText: "<i class ='glyphicon glyphicon-calendar'></i>",
                        onClose: function (selectedDate) {
                            CheckReturnUpdateLoanDate();
                        }
                    }).datepicker("setDate", '@Model.ReturnLoanDate');
                    //$("#txtUpAdditionalDate").val(ldate4);
                    GetLoanDate(type);
                    $("#divUnsRateOfInterest").removeClass("hidden");
                }
                else if (type == "Return") {
                    $("#divUnsDeduction").removeClass("hidden");
                    $("#ApprovalView").addClass("hidden");
                    $("#UpdateView").removeClass("hidden");

                    //loandate = $("#txtUpAdditionalDate").val();
                    //var ldate = loandate.toString().split(' ');
                    //var ldate2 = ldate.toString().split(' ');
                    //var ldate3 = "'" + ldate2 + "'";
                    //var ldate4 = moment(ldate3, "DD-MM-YYYY").format('DD-MMM-YYYY');
                    //$("#txtUpAdditionalDate").val(ldate4);
                    $("#divUnsRateOfInterest").addClass("hidden");
                    GetLoanDate(type);
                    GetLoanAmount(loanid);

                    //transdate = $("#txtUpUnsLoanPayDate").val();
                    //var idate = transdate.toString().split(' ');
                    //var idate2 = idate.toString().split(' ');
                    //var idate3 = "'" + idate2 + "'";
                    //var idate4 = moment(idate3, "DD-MM-YYYY").format('DD-MMM-YYYY');

                    $("#txtUpUnsLoanPayDate").datepicker({
                        dateFormat: 'dd-M-yy',
                        changeMonth: true,
                        changeYear: true,
                        showOn: "button",
                        minDate: '@Model.ReturnLoanDate',
                        buttonText: "<i class ='glyphicon glyphicon-calendar'></i>"
                    }).datepicker("setDate", '@Model.ReturnPayDate');

                }
                var mode = '@Model.ModeofPay';
                var bank = '@Model.Bank';
                var chequeno='@Model.UnsLoanPaymentNo'
                $("#ddl_UpUnsLoanPayMode").find("option:contains('" + mode+ "')").each(function () {
                if ($(this).text() == mode) {
                    $(this).attr("selected", "selected");
                }
               });
                $("#ddl_UpUnsLoanBank").find("option:contains('" + bank + "')").each(function () {
                if ($(this).text() == bank) {
                    $(this).attr("selected", "selected");
                }
                });
                if (type == "Return" || type == "Existing") {

                    if (mode == "Cheque") {
                        $("#txtUpUnsLoanPaymentNo").addClass('hidden');
                        $("#ddl_UpUnsLoanPaymentNo").removeClass('hidden');
                        //var bank = $("#txtUpbank").val();
                        //var chequeno = $("#txtRetPayNo").val();
                        $.ajax({
                            type: "POST",
                            url: "/Accounts/GetChequeNos",
                            data: '{bankname:"' + bank + '"}',
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                var count = Object.keys(response).length;
                                var rowcount = 0;
                                if (count > 0) {
                                    var ddlPayNo = $("#ddl_UpUnsLoanPaymentNo");
                                    ddlPayNo.empty().append('<option selected="selected" value="0">-Please Select-</option>');
                                    $.each(response, function () {
                                        var dbno = this['Cheque_No'];
                                        if (chequeno == dbno) {
                                            ddlPayNo.append($("<option selected='selected'></option>").val(this['Cheque_Id']).html(this['Cheque_No']));
                                        }
                                        else { ddlPayNo.append($("<option></option>").val(this['Cheque_Id']).html(this['Cheque_No'])); }

                                    });
                                    ddlPayNo.append($("<option selected='selected'></option>").val(@Model.chequeid).html(chequeno));
                                }


                            },
                            failure: function (response) {

                            },
                            error: function (response) {

                            }
                        });

                    }
                    else {
                        $("#txtUpUnsLoanPaymentNo").removeClass('hidden');
                        $("#ddl_UpUnsLoanPaymentNo").addClass('hidden');
                    }
                }
            }

            $('#UnloanDeductionTable').on('change', '.loandca', function () {
                var ddlDCA = $(this).find("option:selected").val();
                var row = $(this).closest('tr'); // get the row
                var ddlSubDCA = row.find('.loansdca'); // get the other select in the same row
                var amount = row.find('.DcaAmount');
                if ($(this).find("option:selected").index() == 0) {
                    ddlSubDCA.empty().append('<option selected="selected" value="Select">-Select-</option>');
                    amount.val("");
                }
                else {
                    $.ajax({
                        type: "POST",
                        url: "/Accounts/BindClientRec_Deduction_SubDCA",
                        data: '{ DCAID:"' + ddlDCA + '"}',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            ddlSubDCA.empty().append('<option selected="selected" value="Select">-Select-</option>');
                            $.each(response, function () {
                                ddlSubDCA.append($("<option></option>").val(this['SubDCACode']).html(this['SubDCAIDSTR']));
                            });


                        },
                        failure: function (response) {

                        },
                        error: function (response) {

                        }
                    });
                }
        });
        $("input:radio[name='UnDeduction']").change(function () {
            var _val = $(this).val();
            console.log(_val);
            var DedExist = _val;
            if (DedExist == "Yes") {
                $("#divUnsDeductionGrid").removeClass("hidden");
            }
            else if (DedExist == "No") {
                $("#divUnsDeductionGrid").addClass("hidden");
                $("#UnloanDeductionTable tbody tr").each(function () {
                    var currentRow = $(this);
                    currentRow.find("td").eq(0).find("select").prop('selectedIndex', 0);
                    //var ddlSDCA = currentRow.find("td").eq(1).find("select");
                    //var ddlPayNode = $("#ddl_UnsLoanPayMode");
                    ddlSDCA.empty().append('<option selected="selected" value="0">-Please Select-</option>');
                    currentRow.find("td").eq(2).find("input[type='text']").val("");
                });
            }
            CountUpdateCountLoanFinalAmount();
        });
        });
        function GetLoanDate(type) {
            var Loanno = '@Model.LoanNo';
            var Deductiondca = '@Model.DeductionDCA';
            var Deductionsdca = '@Model.DeductionSDCA';
            var Deductionamount = '@Model.DeductionAmount';
            if (Deductiondca != "") {
                $("#chkDedUnIntY").prop("checked", true);
                $("#chkDedUnIntN").prop("checked", false);
                $("#divUnsDeductionGrid").removeClass("hidden");
                var dcaid = 0;
                $.ajax({
                    type: "POST",
                    url: "/Accounts/GetLoanReturnDate",
                    data: '{LoanNumber:"' + Loanno + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        var ldate = "";
                        var standardDate = "";
                        $.each(response, function () {

                            ldate = this['LoanDate'];
                            standardDate = moment(ldate).format("DD-MMM-YYYY");
                            $("#txtMainLoanDate").val(standardDate);
                        });
                        if (type == "Return") {
                            $.ajax({
                                type: "POST",
                                url: "/Accounts/GetLoanReturnDeductionDCA",
                                data: '{loandate:"' + $("#txtMainLoanDate").val() + '"}',
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (response) {
                                    $("#UnloanDeductionTable tbody tr").each(function () {
                                        var currentRow = $(this);
                                        var ddlDCA = currentRow.find('.loandca');
                                        var ddlSubDCA = currentRow.find('.loansdca'); // get the other select in the same row
                                        var amount = currentRow.find('.DcaAmount');

                                        $.each(response, function () {
                                            var dbdca = this['DCACode'];
                                            if (Deductiondca == dbdca) {
                                                ddlDCA.append($("<option selected='selected'></option>").val(this['DCACode']).html(this['DCAIDSTR']));
                                                dcaid = this['DCAID'];
                                            }
                                            else { ddlDCA.append($("<option></option>").val(this['DCACode']).html(this['DCAIDSTR'])); }
                                        });

                                        $.ajax({
                                            type: "POST",
                                            url: "/Accounts/BindClientRec_Deduction_SubDCA",
                                            data: '{ DCAID:"' + Deductiondca + '"}',
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                            success: function (response) {
                                                $.each(response, function () {
                                                    var dbdedsdca = this['SubDCACode'];
                                                    if (Deductionsdca == dbdedsdca) {
                                                        ddlSubDCA.append($("<option selected='selected'></option>").val(this['SubDCACode']).html(this['SubDCAIDSTR']));
                                                    }
                                                    else { ddlSubDCA.append($("<option></option>").val(this['SubDCACode']).html(this['SubDCAIDSTR'])); }
                                                });


                                            },
                                            failure: function (response) {

                                            },
                                            error: function (response) {

                                            }
                                        });
                                        currentRow.find("td").eq(2).find("input[type='text']").val(Deductionamount);
                                        var basicvalue = $("#txtApprUnsLoanAmount").val();
                                        $("#TotalLoanAmount").val(parseFloat(basicvalue).toFixed(2) - parseFloat(Deductionamount).toFixed(2));
                                    });

                                },
                                failure: function (response) {

                                },
                                error: function (response) {

                                }
                            });
                        }

                    },
                    failure: function (response) {

                    },
                    error: function (response) {

                    }
                });
            }
            else {
                $("#chkDedUnIntY").prop("checked", true);
                $("#chkDedUnIntN").prop("checked", false);
                $("#divUnsDeductionGrid").addClass("hidden");
            }

        }
        function GetLoanAmount(loanid) {

            $.ajax({
                type: "POST",
                url: "/Accounts/GetLoanReturnAmount",
                data: '{Loanid:"' + loanid + '"}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var amount = response.TotalAmount;
                    $("#txtApprUnsLoanAmount").val(parseFloat(amount).toFixed(2));
                    //  $("#txtUnsLoanFinalAmount").val(amount);

                },
                failure: function (response) {

                },
                error: function (response) {

                }
            });

        }

        </script>
