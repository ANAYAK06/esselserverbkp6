@model EsselTestLocalApplication.Models.HR.Childrens

<div class="modal-dialog modal-lg">
    <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Add Childrens</h4>
        </div>
        <div class="modal-body" style="overflow-x:hidden">
            <div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ChildName)
                            @Html.TextBoxFor(model => model.ChildName, htmlAttributes: new { @class = "form-control", @id = "txtChildName", onkeypress = "return isValidSpecialCharacters(event)" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ChildDateofBirth)
                            @Html.TextBoxFor(model => model.ChildDateofBirth, htmlAttributes: new { @class = "form-control", @id = "txtChildDateofBirth", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ChildAge)
                            @Html.TextBoxFor(model => model.ChildAge, htmlAttributes: new { @class = "form-control", @id = "txtChildAge", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ChildGender)
                            <select class="form-control dropdown-toggle " id="ddlChildGender" >
                                <option selected="selected" value="Select">Select</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ChildMaritalStatus)
                            <select class="form-control dropdown-toggle" id="ddlChildmaritalstatus">
                                <option selected="selected" value="Select">Select</option>
                                <option value="Single">Single</option>
                                <option value="Married">Married</option>
                                <option value="Divorced">Divorced</option>
                                <option value="Widower">Widower</option>
                            </select>
                        </div>
                    </div>                   
                </div>
                <div class="row text-right">
                    <button class="btn btn1 btn-success" id="btnewChildSubmit" onclick="SubmitChildMemberData()">Submit</button>
                    <button class="btn btn1 btn-success" id="btnewnewhildReset" onclick="ClearChildMemberModel()">Reset</button>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <br />
                        <div class="text-center">
                            <div id="divAddChildInfoMsg" class="alert alert-danger hidden">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#txtChildDateofBirth").datepicker({
            dateFormat: 'dd-M-yy',
            changeMonth: true,
            changeYear: true,
            showOn: "button",
            buttonText: "<i class ='glyphicon glyphicon-calendar'></i>",
            maxDate: 'dateToday',
            yearRange: "-100:+0",
            onClose: function (selectedDate) {
                CalculateChildMemberAge();
            }
        });
    });
    function isValidSpecialCharacters(event) {
        var character = String.fromCharCode(event.keyCode);
        return !/[~`!#$%\^&*()+=\-\[\]\\';,/{}|\\":<>\?]/g.test(character);
    }
    function CalculateChildMemberAge() {
        var fmemberdob = $("#txtChildDateofBirth").val();

        var From_date = new Date(fmemberdob);
        var To_date = new Date();
        var diff_date = To_date - From_date;
        var years = Math.floor(diff_date / 31536000000);
        $('#txtChildAge').val(years);
    }
    
    function SubmitChildMemberData() {

        isValid = true;
        var errorMsg = "";
        let name = $("#txtChildName").val();
        let dob = $("#txtChildDateofBirth").val();
        let age = $('#txtChildAge').val();
        var gender = $("#ddlChildGender option:selected").index();
        var maritalstatus = $("#ddlChildmaritalstatus  option:selected").index();
        
        if (name === "") {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter Name</p>";
            isValid = false;
        }
        if (dob === "") {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter Child Date of Birth</p>";
            isValid = false;
        }
        if (gender === 0) {
            errorMsg += "<p style='margin-top:-5px!important;'>Select Child Gender</p>";
            isValid = false;
        }       
        if (maritalstatus === 0) {
            errorMsg += "<p style='margin-top:-5px!important;'>Enter Child Marital Status</p>";
            isValid = false;
        }   
        if (!isValid) {
            var finalerror1 = "<div style='align:center'><p>Please enter all required fields!</p>";
            $("#divAddChildInfoMsg").text("");
            $("#divAddChildInfoMsg").append(finalerror1 + errorMsg + "</div>");
            $("#divAddChildInfoMsg").addClass("alert-danger");
            $("#divAddChildInfoMsg").removeClass("hidden alert-success");
            return false;
        }
        else {
            $("#divAddChildInfoMsg").text("");
            $("#divAddChildInfoMsg").addClass("hidden");

            var childData = {
                ChildName: name,
                ChildDateofBirth: dob,
                ChildAge: age,
                ChildGender: $("#ddlChildGender option:selected").val(),
                ChildMaritalStatus: $("#ddlChildmaritalstatus option:selected").val(),
             }
            addFailMsg = "Error Occurred While Adding.";
         
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '/HR/InsertChildMemberData',
                data: { chData: childData },
                success: function (Data) {
                    // alert("Hi");
                    if (Data.saveStatus === "Submited") {

                        $("#divAddChildInfoMsg").text("Member Added Successfully");
                        $("#divAddChildInfoMsg").removeClass("hidden alert-danger");
                        $("#divAddChildInfoMsg").addClass("alert-success");

                    }
                    else {
                        $("#divAddChildInfoMsg").text(Data.saveStatus);
                        $("#divAddChildInfoMsg").addClass("alert-danger");
                        $("#divAddChildInfoMsg").removeClass("hidden alert-success");
                    }
                    $("#btnewChildSubmit").prop('disabled', true);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#divAddChildInfoMsg").text(addFailMsg);
                    $("#divAddChildInfoMsg").addClass("alert-danger");
                    $("#divAddChildInfoMsg").removeClass("hidden alert-success");
                    $("#btnewChildSubmit").prop('disabled', true);
                }
            });
        }
    }


</script>