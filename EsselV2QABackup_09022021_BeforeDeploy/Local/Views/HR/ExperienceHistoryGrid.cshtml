@model List<EsselTestLocalApplication.Models.HR.ExperienceHistory>
@{
    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    System.Web.Script.Serialization.JavaScriptSerializer oSerializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    
    var HistoryJson = "";
    var EditHistoryJson = "";
    var Action = Session["EmpAction"].ToString();
    if (Action == "New")
    {
        HistoryJson = serializer.Serialize(((List<EsselTestLocalApplication.Models.HR.ExperienceHistory>)Session["ExperienceHistory"]).ToArray());
    }
    else
    {
        EditHistoryJson = serializer.Serialize(((List<EsselTestLocalApplication.Models.HR.ExperienceHistory>)Session["EditExperienceHistory"]).ToArray());
    }
}
<div class="col-md-12 change-tab">
    <div class="strike1">
        <span>Experience Details</span>
    </div>
    <div class="tabledynamic">
        <br />
        <table id="ExperienceTable" class="table order-list experiencetable dataTable">
            <thead>
                <tr>
                    <td style="text-align:center;color:#fff !important;background-color: #202447;">S.No</td>
                    <td style="text-align:center;color:#fff !important;background-color: #202447;">Name of Organisation</td>
                    <td style="text-align:center;color:#fff !important;background-color: #202447;">From</td>
                    <td style="text-align:center;color:#fff !important;background-color: #202447;">To</td>
                    <td style="text-align:center;color:#fff !important;background-color: #202447;">Role/Designation</td>
                    <td style="text-align:center;color:#fff !important;background-color: #202447;"></td>
                </tr>
            </thead>
            <tbody>
                @{int count4 = 1; }


                @foreach (var item in Model)
                {
                    <tr>
                        <td style="text-align:center">@count4</td>
                        <td style="text-align:center">
                            @Html.DisplayFor(modelItem => item.OrganisationName)
                        </td>
                        <td style="text-align:center">@Html.DisplayFor(modelItem => item.FromYear)</td>
                        <td style="text-align:center">
                            @Html.DisplayFor(modelItem => item.ToYear)
                        </td>
                        <td style="text-align:center">@Html.DisplayFor(modelItem => item.Role)</td>
                        <td style="text-align:center"><input type="button" class="ibtnAddHistorydelete btn btn-md btn-danger" value="Delete"></td>
                    </tr>
                    count4++;
                }
            </tbody>
            @*<tfoot>
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>
                            <input type="button" class="btn btn-default  btn-block" value="Add More" onclick="AddExperiencegridnewrow()" />
                        </td>
                </tfoot>*@
        </table>
    </div>
</div>
<script>
    $(document).ready(function () {
        @*console.log(@Html.Raw(Json.Encode(@StudentJson)));*@
        var historyGrid = null;
        InitializeHistoryGrid();
       
         var Action = '@Session["EmpAction"]';
        if (Action!== "") {
            if (Action=== "New") {    $("#HiddenExperienceHistory").val(@Html.Raw(Json.Encode(@HistoryJson)));}
            else if(Action === "Edit") {
                $("#UpdateHiddenExperienceHistory").val(@Html.Raw(Json.Encode(@EditHistoryJson)));
            }
        }
        $("table.order-list.experiencetable").on("click", ".ibtnAddHistorydelete", function (event) {
            var row = $(this).closest("tr");
            var organisation = $.trim(row.find("td").eq(1).html());
            var rowno = $.trim(row.find("td").eq(0).html());
            addFailMsg = "Error Occurred While Deleting.";
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '/HR/DeleteExperienceHistoryData',
                data: { OrganisationName: organisation },
                success: function (Data) {
                    //alert("Hi");
                    if (Data.saveStatus === "Deleted") {
                          var Action1 = '@Session["EmpAction"]';
                        if (Action1 !== "") {
                            if (Action1 === "New") {
                                $("#divExperienceHistory").load('/HR/ExperienceHistoryGrid');
                            }
                            else {
                                $("#divUpdateExperienceHistory").load('/HR/ExperienceHistoryGrid');
                            }
                        }
                     
                        
                    }
                    else {
                        $("#divAddNewEmpInfoMsg").text(addFailMsg);
                        $("#divAddNewEmpInfoMsg").addClass("alert-danger");
                        $("#divAddNewEmpInfoMsg").removeClass("hidden alert-success");
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#divAddNewEmpInfoMsg").text(addFailMsg);
                    $("#divAddNewEmpInfoMsg").addClass("alert-danger");
                    $("#divAddNewEmpInfoMsg").removeClass("hidden alert-success");
                }
            });
        });


    });
    function ReassignRowNoforEHGrid() {
        var rowno = 1;
        $("#ExperienceTable tbody tr").each(function () {
            var currentRow = $(this);
            currentRow.find("td").eq(0).html(rowno);
            rowno++;
        });

    }

    function InitializeHistoryGrid() {
        historyGrid = $('#ExperienceTable').DataTable({
            info: false,
            destroy: false,
            paging: false,
            lengthChange: false,
            searching: false,
            ordering: false,
            pagingType: false,
            language: {
                "emptyTable": "No Data Found"
            },
            "createdRow": function (row, data, index) {

            },
            pageLength: 10
        });
    }
</script>

@*}*@
