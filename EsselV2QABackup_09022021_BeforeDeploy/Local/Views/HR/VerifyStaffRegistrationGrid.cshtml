@model List<EsselTestLocalApplication.Models.HR.EmployeeRegistration>
<style>
    .tdcls {
        word-wrap: break-word;
        word-break: break-all;
        white-space: normal;
        text-align: left;
        color: #fff !important;
        background-color: #004d99 !important;
        font-weight: normal;
        white-space: normal;
        font-size: 10px
    }

    .txtcls {
        font-weight: normal;
        white-space: normal;
        font-size: 11px;
        text-align: left;
    }
</style>
<div class="table-responsive  w-100">
    <table id="tblApproveStaffGrid" style="width:100%" class="hover stripe nowrap example dataTable no-footer">
        <thead>
            <tr>
                <th   class="tdcls"></th>
                <th class="hidden tdcls">Id</th>
                <th class="tdcls">EmpRefNo</th>
                <th   class="tdcls">FirstName</th>
                <th   class="tdcls">Category</th>
                <th  class="tdcls">DesignatedAs</th>
                <th  class="tdcls">Department</th>
                <th  class="tdcls">JoiningCategory</th>
                <th  class="tdcls">JoiningDate</th>
                <th class="hidden tdcls">Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="details-control"></td>
                    <td class="hidden">
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td class="txtcls">
                        @Html.DisplayFor(modelItem => item.EmpRefNo)
                    </td>
                    <td class="txtcls">
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td class="txtcls">
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td class="txtcls">
                        @Html.DisplayFor(modelItem => item.DesignatedAs)
                    </td>
                    <td class="txtcls">@Html.DisplayFor(modelItem => item.Department)</td>

                    <td class="txtcls">@Html.DisplayFor(modelItem => item.JoiningType)</td>
                    <td class="txtcls">
                        @Html.DisplayFor(modelItem => item.JoiningDate)
                    </td>
                    <td class="hidden txtcls">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                </tr>
            }
        </tbody>

        <tfoot>
            <tr></tr>
        </tfoot>
    </table>

</div>
<script>
    var openRows = new Array();
    $(document).ready(function () {
        var ApproveStaffGrid = null;
        InitializeApprStaffGrid();
    });
    function InitializeApprStaffGrid() {
        ApproveStaffGrid = $('#tblApproveStaffGrid').DataTable({
            info: false,
            destroy: false,
            paging: false,
            lengthChange: false,
            searching: false,
            ordering: false,
            pagingType: false,
            language: {
                "emptyTable": "No Staff Found"
            },
            "createdRow": function (row, data, index) {
                var oldstatus = $('td:eq(9)', row).html();
                if (oldstatus == 1) {
                    $('td:eq(9)', row).html("Verification Pending");
                }
                else { $('td:eq(9)', row).html("Return"); }
            },
            pageLength: 10
        });
        $('#tblApproveStaffGrid tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = ApproveStaffGrid.row(tr);
            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // close all previously opened rows
                closeOpenedRows(ApproveStaffGrid, tr);
                // Open this row
                row.child(formatApprStaffAccounts(row.data())).show();
                tr.addClass('shown');
                // store current selection
                openRows.push(tr);
            }
        });
    }
    function closeOpenedRows(table, selectedRow) {
        $.each(openRows, function (index, openRow) {
            // not the selected row!
            if ($.data(selectedRow) !== $.data(openRow)) {
                var rowToCollapse = table.row(openRow);
                rowToCollapse.child.hide();
                openRow.removeClass('shown');
                // replace icon to expand
                //$(openRow).find('td.details-control').html('<span class="glyphicon glyphicon-plus"></span>');
                // remove from list
                var index = $.inArray(selectedRow, openRows);
                openRows.splice(index, 1);
            }
        });
    }
    function formatApprStaffAccounts(d) {
        var htmltext;
        var EmpId, EmpStatus, RefNo;
        $.each(d, function (index, value) {
            if (index == 1)
                EmpId = value;
            if (index == 2)
                RefNo = value;
            if (index == 9)
                EmpStatus = value;
        });

        var divid = "divapprStaff" + EmpId;
        var divid1 = $("#" + divid + "");
        $.ajax({
            type: 'POST',
            dataType: 'html',
            url: '/HR/VerifyStaffRegistrationView',
            data: { EmpRefNo: RefNo, Status: EmpStatus },
            success: function (Data) {
                var divid2 = "divapprStaff" + EmpId;
                var divid3 = $("#" + divid2 + "");
                $(divid3).html(Data);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {

            }
        });
        return '<div id="divapprStaff' + EmpId + '" class="row" ></div>';
    }
</script>