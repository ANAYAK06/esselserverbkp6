@model EsselTestLocalApplication.Models.Users

@{
    ViewBag.Title = "Role Login";
    //Layout = "~/Views/Shared/EsselMaster.cshtml";
}
@Scripts.Render("~/bundles/Login")
<form onsubmit="return false">
    <div class="col-md-12">

        <div class="col-md-12" style="margin-top:15px;">
            <div class="form-group">
                <div class="col-md-4">
                    <label>Current Password</label>
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.CongfirmPassword, htmlAttributes: new
               {
                   @class = "form-control",
                   @id = "txtoldPwd",
                   @type = "password",
               })
                </div>
                </div>
            </div>
        <div class="col-md-12" style="margin-top:15px;">
            <div class="form-group">
                <div class="col-md-4">
                    <label>New Password</label>
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.CongfirmPassword, htmlAttributes: new
               {
                   @class = "form-control",
                   @id = "txtNewPwd",
                   @title = "Password must contain at least 1 capital letter,\n\n1 small letter, 1 number and 1 special character.\n\nFor special characters you can pick one of these -,(,!,@,#,$,),%,<,",
                   onkeyup = "ChngPasswordValidator(this)",
                   @type = "password",
               })
                </div>
                </div>
            </div>
        <div class="col-md-12" style="margin-top:15px;">
            <div class="form-group">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.CongfirmPassword)
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.CongfirmPassword, htmlAttributes: new
               {
                   @class = "form-control",
                   @id = "txtNewConfPwd",
                   @type = "password",
                   onchange = "ValidateConfirmPassword()"
               })
                </div>
                </div>
            </div>

        <div class="col-md-12"  style="margin-top:35px;">
            <div class="text-center">
                <input type="submit" class="btn btn1 btn-success" id="btnSubmitNewPwd" onclick="SubmitChangePassword('@Model.LoginType')" value="Submit" />

                <input type="hidden" value="" id="txtupUserid" />
                <input type="hidden" value="" id="txtCurrentpwd" />
                <input type="hidden" id="session" value="@Model.LoginType" />
                <input type="hidden" id="pwdchanged" value="0" />
            </div>
        </div>
        <div class="col-md-12">
            <div class="text-center">
                <br />
                <div id="divChangePwdInfoMsg" class="alert alert-danger hidden">
                </div>
            </div>
        </div>
    </div>
</form>

<script>       
    $(document).ready(function () {   
        var logintype = '@Model.LoginType';    
          if (logintype === 'Role') {
                var currentUserid = '@Session["UserID"]';               
                var Currentusername = '@Session["UserID"]';
                $("#txtupUserid").val(Currentusername);
            }
            else {
                var Currentusername = '@Model.Username';
                $("#txtupUserid").val(Currentusername);
            }       
     @*var currentUserid = '@Session["UID"]';
     $("#txtupUserid").val(currentUserid); 
     var Currentusername = '@Session["UserID"]';*@
     $.ajax({
         type: "POST",
         url: "/Login/CheckUserbyUsername",
         data: '{Username:"' + Currentusername + '",LoginType:"' + logintype +'"}',
         contentType: "application/json; charset=utf-8",
         dataType: "json",
         success: function (response) {
             var pwd = response.UserPwd;

             if (pwd !== '' && pwd !== null) {
                 var decodedpwd = window.atob(pwd);
                 //alert(decodedpwd);
                 $("#txtCurrentpwd").val(decodedpwd);
             }
             

             //removeSpinner($('#ajax-container'), function () {
             //    $('#ajax-container').html('Content loaded.');
             //});
         },
         failure: function (response) {
           
             //removeSpinner($('#ajax-container'), function () {
             //    $('#ajax-container').html('Content loaded.');
             //});
         },
         error: function (response) {
            
             //removeSpinner($('#ajax-container'), function () {
             //    $('#ajax-container').html('Content loaded.');
             //});
         }
     });
    });
</script>










