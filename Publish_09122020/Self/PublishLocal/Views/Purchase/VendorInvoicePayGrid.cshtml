@model EsselTestLocalApplication.Models.Purchase.SPPOInvoicePayment
<div class="row">
    <div class="table-responsive col-md-12">
        <table id="tblInvPayGrid" style="width:100%" class="hover stripe nowrap example dataTable no-footer">
            <thead>
                <tr>
                    <th>View</th>
                    <th class="hidden">RowNo</th>
                    <th style="text-align:center;font-weight:bold" class="Invhdcheckall">
                        <ul class="list-inline">
                            <li class="eagle-checkbox">
                                <label class="eagle-check custom-checkbox">
                                    <input type="checkbox" class="eagle-check-input chkInvselectall" name="chkhdInvselectall">
                                    <span class="eagle-check-indicator"></span>
                                    <span class="eagle-check-description"></span>
                                </label>
                            </li>
                        </ul>
                    </th>
                    <th>Invoice No</th>
                    <th>Invoice Date</th>
                    <th>Cost Center</th>
                    <th>Account Head</th>
                    <th>Vendor Id</th>
                    <th>Basic</th>
                    <th class="hidden">Net Amount</th>
                    <th>Balance</th>
                    <th>PONO</th>
                </tr>
            </thead>
            <tbody>
                @{ int count = 1; }
                @foreach (var item in Model.InvoiceData)
                {
                <tr>
                    <td class="details-control">
                        <button type="button" class="btn btn-info">
                            <i class="fa fa-search" aria-hidden="false"></i>
                        </button>
                    </td>
                    <td class="hidden">
                        @count
                    </td>
                    <td style="text-align:center">
                        <ul class="list-inline">
                            <li class="eagle-checkbox">
                                <label class="eagle-check custom-checkbox"><input type="checkbox" class="eagle-check-input chkInvpaysingle" name="chkInvpaysingle"><span class="eagle-check-indicator"></span><span class="eagle-check-description"></span></label>
                            </li>
                        </ul>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InvoiceNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SPPOInvoiceDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CCCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DCACode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SPPOBasicValue)
                    </td>
                    <td class="hidden">
                        @Html.DisplayFor(modelItem => item.NetAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Balance)
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.SPPONo)</td>

                </tr>
                    count++;
                }
            </tbody>

            <tfoot>
                <tr></tr>
            </tfoot>
        </table>
    </div>
    <div class="col-md-12" id="divGPPaymentDetails" style="margin-top:10px">
        <div class="row">
            <div class="col-md-12">
                <h5 style="text-align:left;font-weight:bold;margin-bottom:-1%">Payment Details</h5>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12"><hr class="separationHr" /></div>
        </div>
        <div  class="row">
            @Html.Action("VendorPayDetailsGrid", "Purchase",new { VendorName = Model.Name,VendorType=Model.VendorType,Paymenttype=Model.Paytype, Maxinvdate = Model.MaxInvoiceDate })
        </div>
        @*<div class="col-md-12">
            <div class="col-md-4">
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name)
                    @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control", @id = "txtInvPayName" })
                </div>
            </div>
            <div class="col-md-4">
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.BankId)
                    @Html.DropDownListFor(model => model.BankId, new SelectList(Model.BankNamesList, "Bank_Id", "Bank_Name"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddlInvPayBank", onchange = "VendorinvPayModeChange()" })

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ModeofPay)
                    @Html.DropDownListFor(model => model.ModeofPay, new SelectList(Model.GenPayModeList, "Mode", "ModeDesc"), "-Please Select-", htmlAttributes: new { @class = "form-control dropdown-toggle", @id = "ddlInvPayMode", onchange = "VendorinvPayModeChange()" })

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Number)
                    @Html.TextBoxFor(model => model.Number, htmlAttributes: new { @class = "form-control", @id = "txtInvPayPaymentNo" })
                    <select class="form-control dropdown-toggle" id="ddlInvPaymentNo">
                        <option selected="selected" value="Select">-Select-</option>
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.TransactionDate)
                    @Html.TextBoxFor(model => model.TransactionDate, new { @id = "txtInvPayPayDate", @class = "form-control date-picker", @type = "text", @readOnly = "true" })

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks)
                    @Html.TextAreaFor(model => model.Remarks, new { @id = "txtInvPayReamarks", @class = "form-control", @type = "text", @rows = "3" })

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.TransactionAmount)
                    @Html.TextBoxFor(model => model.TransactionAmount, new { @id = "txtInvPayFinalAmount", @class = "form-control", @type = "text", onkeypress = "return ValidateAmount(this,event);",
                   onkeyup = "CheckInvoiceAmount()"
               })

                </div>
            </div>
        </div>
        <div class="col-md-12">
            <button class="btn btn1 btn-success" id="btnInvPaySubmit" onclick="SubmitVendorInvoicePayData()">Submit</button>

        </div>*@
    </div>
    @*<div class="col-md-12">
        <div class="text-center">
            <br />
            <div id="divInvPayInfoMsg" class="alert alert-danger hidden">
            </div>
        </div>
    </div>*@
</div>
<div class="modal fade" id="ModalInvTaxDeduction" role="dialog" data-backdrop="static" data-keyboard="false">
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var InvGrid = null;
        InitializeInvGrid();
       
        $('#tblInvPayGrid thead tr').on('change', '.chkInvselectall', function () {
            var row = $(this).closest('tr'); // get the row
            var headcheckbox = row.find("th").eq(2).find("input[type='checkbox']").is(":checked");
           // alert(headcheckbox);
            if (headcheckbox == true) {
                $("#tblInvPayGrid tbody tr").each(function () {
                    var currentRow = $(this);
                    //var checkbox = currentRow.find("td").eq(10).find("input[type='checkbox']").is(":checked");
                    currentRow.find("td").eq(2).find("input[type='checkbox']").prop('checked', true);
                });
            }
            else {
                $("#tblInvPayGrid tbody tr").each(function () {
                    var currentRow = $(this);
                    //var checkbox = currentRow.find("td").eq(10).find("input[type='checkbox']").is(":checked");
                    currentRow.find("td").eq(2).find("input[type='checkbox']").prop('checked', false);
                });
            }
            //CountVendorInvPayTotal();
            CountPayTotal();
        });
        $('#tblInvPayGrid').on('change', '.chkInvpaysingle', function () {
            var row = $(this).closest('tr'); // get the row
            var checkbox = row.find("td").eq(2).find("input[type='checkbox']").is(":checked");
            if (checkbox == false) {
                $("#tblInvPayGrid thead tr").each(function () {
                    var currentRow = $(this);
                    currentRow.find("th").eq(2).find("input[type='checkbox']").prop('checked', false);
                });
            }
            else {
                var noofrows = $("#tblInvPayGrid tbody tr").length;
                var checkedrows = 0;
                $("#tblInvPayGrid tbody tr").each(function () {
                    var currentRow = $(this);
                    var checkbox = currentRow.find("td").eq(2).find("input[type='checkbox']").is(":checked");
                    if (checkbox == true) {
                        checkedrows = parseInt(checkedrows) + 1;
                    }
                });
               
                if (parseInt(noofrows) == parseInt(checkedrows)) {
                    $("#tblInvPayGrid thead tr").each(function () {
                        var currentRow = $(this);
                        currentRow.find("th").eq(2).find("input[type='checkbox']").prop('checked', true);
                    });
                }
            }
            //CountVendorInvPayTotal();
            CountPayTotal();
        });
        //$('#tblInvPayGrid tbody').on('click', 'td.details-control', function () {
        //    var tr = $(this).closest('tr');
        //    console.log(tr);
        //});
    });
    //function CountVendorInvPayTotal() {
    //    var invtotalamount = 0;
    //    $("#tblInvPayGrid tbody tr").each(function () {
    //        var currentRow = $(this);

    //        var checkbox = currentRow.find("td").eq(10).find("input[type='checkbox']").is(":checked");
    //        var rowamount = currentRow.find("td").eq(9).html();
    //        if (checkbox == true) {
    //            invtotalamount = parseFloat(invtotalamount) + parseFloat(rowamount);
    //        }
    //    });
    //    //$("#txtinvtotal").val(parseFloat(invtotalamount).toFixed(2));
    //    $("#txtInvPayFinalAmount").val(parseFloat(invtotalamount).toFixed(2));
    //}
    //function CheckInvoiceAmount() {
    //    var finalAmount = $("#txtInvPayFinalAmount").val();
    //    var invtotalamount = 0;
    //    $("#tblInvPayGrid tbody tr").each(function () {
    //        var currentRow = $(this);
    //        var checkbox = currentRow.find("td").eq(10).find("input[type='checkbox']").is(":checked");
    //        var rowamount = currentRow.find("td").eq(9).html();
    //        if (checkbox == true) {
    //            invtotalamount = parseFloat(invtotalamount) + parseFloat(rowamount);
    //        }
    //    });
    //    if (parseFloat(finalAmount) > parseFloat(invtotalamount)) {
    //        $("#divInvPayInfoMsg").text("");
    //        $("#divInvPayInfoMsg").append("<div>You are excessing the Invoice Amount</div>");
    //        $("#divInvPayInfoMsg").addClass("alert-danger");
    //        $("#divInvPayInfoMsg").removeClass("hidden alert-success");
    //        return false;
    //    }
    //    else {
    //        $("#divInvPayInfoMsg").text("");
    //        $("#divInvPayInfoMsg").addClass("hidden");
    //    }
    //}
    //function InvoicePaymentDateValidation() {

    //    var paydate = $("#txtInvPayPayDate").val();
    //    //  alert(paydate + "--" + $("#RetPayInvTable tbody tr").length);
    //    $("#tblInvPayGrid tbody tr").each(function () {
    //        var currentRow = $(this);
    //        var checkbox = currentRow.find("td").eq(10).find("input[type='checkbox']").is(":checked");
    //        var invdate = currentRow.find("td").eq(3).html();
    //        if (checkbox == true) {
    //            if (new Date(paydate) < new Date(invdate)) {
    //                // alert('invdate:' + invdate + "...." + "paydate:" + paydate);
    //                $("#divInvPayInfoMsg").text("");
    //                $("#divInvPayInfoMsg").append("<div>Payment Date must be greater than Invoice Date</div>");
    //                $("#divInvPayInfoMsg").addClass("alert-danger");
    //                $("#divInvPayInfoMsg").removeClass("hidden alert-success");
    //                $("#divInvPayInfoMsg").datepicker("setDate", 'dateToday');
    //            }
    //            else {
    //                $("#divInvPayInfoMsg").text("");
    //                $("#divInvPayInfoMsg").addClass("hidden");
    //            }
    //        }
    //    });
    //}
    function InitializeInvGrid() {
        InvGrid = $('#tblInvPayGrid').DataTable({
            info: false,
            destroy: false,
            paging: false,
            lengthChange: false,
            searching: false,
            ordering: false,
            pagingType: false,
            language: {
                "emptyTable": "No Invoices Found"
            },
            "createdRow": function (row, data, index) {
            },

        });
        $('#tblInvPayGrid tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = InvGrid.row(tr);
            ShowInvPopUp(row.data());
        });

    }
    function ShowInvPopUp(data) {
        var InvNo = "";
        $.each(data, function (index, value) {
            if (index == 3)
                InvNo = value;
        });
       //alert(InvNo);
        //var title = "Edit General DCA";
        //$.ajax({
        //    type: 'GET',
        //    dataType: 'html',
        //    url: '/Purchase/GetVendorInvoiceTaxDeductionGrid',
        //    data: { InvoiceNo: InvNo },           
        //    success: function (response) {
        //        alert(response);
        //        var count1 = Object.keys(Data).length;             
        //        if (count1 > 0) {
        //            $('#ModalInvTaxDeduction').html(response);
        //            $('#ModalInvTaxDeduction').modal();
        //        }
        //    },
        //    error: function () {
        //    }
        //});

        $.ajax({
            type: 'POST',
            url: "/Purchase/GetVendorInvoiceTaxDeductionGrid",
            //data: '{InvoiceNo:"' + InvNo + '"}',
            data: { InvoiceNo: InvNo },           
            dataType: 'html',
            success: function (response) {
                //alert(response);
                $('#ModalInvTaxDeduction').html(response);
                    $('#ModalInvTaxDeduction').modal();
            },
            error: function () {
            }
        });

    }

</script>